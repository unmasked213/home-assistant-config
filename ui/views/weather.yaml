
# | START: weather.yaml
# |  PATH: /config/ui/views/weather.yaml


title: 'Weather'
path: weather
subview: false
type: sections
max_columns: 1
icon: ''



sections:
  - type: grid
    cards:


# ➔ Divider
      - type: custom:button-card
        template: divider_text_template
        variables:
          text_content: "Test divider"
          text_start_delay: 1.5
          text_character_delay: 0.05
          animation_duration: 0.5
          line_color: "var(--divider-color, #333)"
          text_color: "var(--primary-text-color, #fff)"
          shine_color: "rgba(255, 255, 255, 1)"


# ➔ Wather card: Header showing animated weather symbol and temperature
      - type: custom:weather-card
        entity: weather.forecast_home
        current: true
        details: false
        icons: /local/weathericons/
        card_mod:
          style: |
            ha-card {
              background: none;
              border: none;
              box-shadow: none;
              height: 65px;
              
              margin-bottom: -20px !important;
            }

            /* Use flexbox to align icon and temperature on the same row */
            ha-card div.current {
              display: flex;
              align-items: center;
              justify-content: flex-start;
            }

            /* Adjust icon size and positioning */
            ha-card div.current span.icon.bigger {
              width: 100px;
              height: 100px;
              left: 18px;
              margin: 0 0.5em 0 0; /* Adjusts spacing between icon and temperature */
            }

            /* Temperature styling */
            ha-card div.current span.temp {
              color: var(--primary-text-color) !important;
              font-size: 40px !important;
              font-weight: 300 !important;
              margin-right: 0.25em; /* Slight spacing between temp and unit */
            }

            /* Unit (°C) styling */
            ha-card div.current span.tempc {
              color: var(--secondary-text-color) !important;
              font-size: 14.5px;
              margin-right: 20px !important;
              align-self: flex-end; /* Aligns °C text with the number */
            }




# ➔ Weather bar card for today's weather
      - type: custom:hourly-weather
        entity: weather.pirateweather
        show_precipitation_amounts: false
        show_precipitation_probability: false
        icons: true
        name: " "
        show_wind: "false"
        hide_temperatures: true
        num_segments: |
          {{ 24 - now().hour }}
        label_spacing: |
          {% set segments = 24 - now().hour %}
          {{ 4 if segments > 12 else 2 }}
        icon_map:
          clear-night: mdi:void
          cloudy: mdi:void
          fog: mdi:void
          hail: fapro:solar_cloud_waterdrops
          lightning: fapro:solar_cloud_bolt
          lightning-rainy: fapro:solar_cloud_bolt
          partlycloudy: mdi:void
          pouring: fapro:solar_cloud_waterdrops
          rainy: fapro:solar_cloud_waterdrops
          snowy: fapro:snowflake
          snowy-rainy: fapro:solar_cloud_waterdrops
          sunny: mdi:void
          windy: fapro:solar_tornado
          windy-variant: fapro:solar_tornado
          exceptional: mdi:void
        colors:
          snowy: rgba(38, 116, 185,1)
          rainy: rgba(38, 116, 185,1)
          hail: rgba(38, 116, 185,1)
          lightning: rgba(38, 116, 185,1)
          lightning-rainy: rgba(38, 116, 185,1)
          pouring: rgba(38, 116, 185,1)
          snowy-rainy: rgba(38, 116, 185,1)
          sunny: rgba(130, 196, 255,0.6)
          clear-night: rgba(130, 196, 255,0.6)
          cloudy: rgba(130, 196, 255,0.6)
          fog: rgba(130, 196, 255,0.6)
          partlycloudy: rgba(130, 196, 255,0.6)
          windy: rgba(130, 196, 255,0.6)
          windy-variant: rgba(130, 196, 255,0.6)
          exceptional: rgba(130, 196, 255,0.6)
        card_mod:
          style: |
            ha-card {
              background: none;
              border: none;
              box-shadow: none;
            }






# ➔ Divider card
      - type: custom:bubble-card
        card_type: separator
        name: This week
        card_layout: large
        styles: |
          .bubble-name {
            color: var(--contrast20, var(--primary-text-color, rgba(255, 255, 255, 0.9))) !important;
            font-size: 0.95em !important;
            font-weight: 400 !important;
            letter-spacing: 1.4px !important;
            padding-left: 12px;
            font-family: Ubuntu, sans-serif;
            text-transform: capitalize;             
          }
          .bubble-icon {
            display: none;
          }  
          .bubble-line {
            background-color: var(--contrast6, var(--divider-color, rgba(0, 0, 0, 0.1)));
            opacity: 1;
            height: 1px;
          }
          ha-card {
            margin-bottom: -2px !important;
          }
        modules:
          - default






# ➔ Rainfall probability card (7 days)
      - type: custom:button-card
        variables:
          barheight: 50px
          barwidth: 8px
          barborderradius: 4px
          iconSize: 30px
          iconbottom: 12px
          barbackground: rgba(150,150,150,0.16)
          barcolor: rgba(53, 159, 244, 1)
          tempcolor: var(--primary-text-color)
          iconcolor: var(--blue)
          tempNumberColor: var(--primary-text-color)
          degColor: var(--contrast9)
          dayColor: var(--contrast9)
          tempFontSize: 12px
          tempNumberFontSize: 17px
          dayFontSize: 0.8rem
          textLetterSpacing: 0.05rem
          textLineHeight: 1.2
          tempNumberFontWeight: 400
          restFontWeight: 300
          animDuration: 2s
          baseDelay: 0.1s
          baseIconUrl: /local/weathericons/fill/svg-static/
          iconClearDay: clear-day
          iconClearNight: clear-night_night
          iconPartlyCloudyDay: partly-cloudy-day
          iconPartlyCloudyNight: partlycloudy_night
          iconCloudy: cloudy
          iconFog: fog
          iconHail: hail
          iconLightning: lightning
          iconLightningRainy: lightning-rainy
          iconPouring: pouring
          iconRain: raindrop
          iconSnow: snowflake
          iconSnowyRainy: snowy-rainy
          iconSleet: sleet
          iconWindy: windy
          iconWindyVariant: windy-variant
          iconExceptional: exceptional
        styles:
          card:
            - background: none
            - border: none
            - box-shadow: none
            - height: 150px
            - overflow: visible
          custom_fields:
            bar1:
              - position: absolute
              - left: 5%
              - bottom: 90px
              - width: "[[[ return variables.barwidth; ]]]"
              - height: "[[[ return variables.barheight; ]]]"
              - background: "[[[ return variables.barbackground; ]]]"
              - border-radius: "[[[ return variables.barborderradius; ]]]"
              - overflow: hidden
              - animation: >-
                  [[[ return `slide-in-blurred-bottom ${variables.animDuration} ease-out
                  0.4s both`; ]]]
            bar2:
              - position: absolute
              - left: 20%
              - bottom: 90px
              - width: "[[[ return variables.barwidth; ]]]"
              - height: "[[[ return variables.barheight; ]]]"
              - background: "[[[ return variables.barbackground; ]]]"
              - border-radius: "[[[ return variables.barborderradius; ]]]"
              - overflow: hidden
              - animation: >-
                  [[[ return `slide-in-blurred-bottom ${variables.animDuration} ease-out
                  0.5s both`; ]]]
            bar3:
              - position: absolute
              - left: 35%
              - bottom: 90px
              - width: "[[[ return variables.barwidth; ]]]"
              - height: "[[[ return variables.barheight; ]]]"
              - background: "[[[ return variables.barbackground; ]]]"
              - border-radius: "[[[ return variables.barborderradius; ]]]"
              - overflow: hidden
              - animation: >-
                  [[[ return `slide-in-blurred-bottom ${variables.animDuration} ease-out
                  0.6s both`; ]]]
            bar4:
              - position: absolute
              - left: 50%
              - bottom: 90px
              - width: "[[[ return variables.barwidth; ]]]"
              - height: "[[[ return variables.barheight; ]]]"
              - background: "[[[ return variables.barbackground; ]]]"
              - border-radius: "[[[ return variables.barborderradius; ]]]"
              - overflow: hidden
              - animation: >-
                  [[[ return `slide-in-blurred-bottom ${variables.animDuration} ease-out
                  0.7s both`; ]]]
            bar5:
              - position: absolute
              - left: 65%
              - bottom: 90px
              - width: "[[[ return variables.barwidth; ]]]"
              - height: "[[[ return variables.barheight; ]]]"
              - background: "[[[ return variables.barbackground; ]]]"
              - border-radius: "[[[ return variables.barborderradius; ]]]"
              - overflow: hidden
              - animation: >-
                  [[[ return `slide-in-blurred-bottom ${variables.animDuration} ease-out
                  0.8s both`; ]]]
            bar6:
              - position: absolute
              - left: 80%
              - bottom: 90px
              - width: "[[[ return variables.barwidth; ]]]"
              - height: "[[[ return variables.barheight; ]]]"
              - background: "[[[ return variables.barbackground; ]]]"
              - border-radius: "[[[ return variables.barborderradius; ]]]"
              - overflow: hidden
              - animation: >-
                  [[[ return `slide-in-blurred-bottom ${variables.animDuration} ease-out
                  0.9s both`; ]]]
            bar7:
              - position: absolute
              - left: 95%
              - bottom: 90px
              - width: "[[[ return variables.barwidth; ]]]"
              - height: "[[[ return variables.barheight; ]]]"
              - background: "[[[ return variables.barbackground; ]]]"
              - border-radius: "[[[ return variables.barborderradius; ]]]"
              - overflow: hidden
              - animation: >-
                  [[[ return `slide-in-blurred-bottom ${variables.animDuration} ease-out
                  1s both`; ]]]
            temp1:
              - position: absolute
              - left: 3.65%
              - bottom: 45px
              - font-size: "[[[ return variables.tempFontSize; ]]]"
              - width: 20px
              - overflow: visible
              - animation: >-
                  [[[ return `slide-in 1s ease-out 0.6s both, opacity 1s ease-in 0.6s
                  both`; ]]]
            temp2:
              - position: absolute
              - left: 18.65%
              - bottom: 45px
              - font-size: "[[[ return variables.tempFontSize; ]]]"
              - width: 20px
              - overflow: visible
              - animation: >-
                  [[[ return `slide-in 1s ease-out 0.7s both, opacity 1s ease-in 0.7s
                  both`; ]]]
            temp3:
              - position: absolute
              - left: 33.65%
              - bottom: 45px
              - font-size: "[[[ return variables.tempFontSize; ]]]"
              - width: 20px
              - overflow: visible
              - animation: >-
                  [[[ return `slide-in 1s ease-out 0.8s both, opacity 1s ease-in 0.8s
                  both`; ]]]
            temp4:
              - position: absolute
              - left: 48.65%
              - bottom: 45px
              - font-size: "[[[ return variables.tempFontSize; ]]]"
              - width: 20px
              - overflow: visible
              - animation: >-
                  [[[ return `slide-in 1s ease-out 0.9s both, opacity 1s ease-in 0.9s
                  both`; ]]]
            temp5:
              - position: absolute
              - left: 63.65%
              - bottom: 45px
              - font-size: "[[[ return variables.tempFontSize; ]]]"
              - width: 20px
              - overflow: visible
              - animation: >-
                  [[[ return `slide-in 1s ease-out 1s both, opacity 1s ease-in 1s both`;
                  ]]]
            temp6:
              - position: absolute
              - left: 78.65%
              - bottom: 45px
              - font-size: "[[[ return variables.tempFontSize; ]]]"
              - width: 20px
              - overflow: visible
              - animation: >-
                  [[[ return `slide-in 1s ease-out 1.1s both, opacity 1s ease-in 1.1s
                  both`; ]]]
            temp7:
              - position: absolute
              - left: 93.65%
              - bottom: 45px
              - font-size: "[[[ return variables.tempFontSize; ]]]"
              - width: 20px
              - overflow: visible
              - animation: >-
                  [[[ return `slide-in 1s ease-out 1.2s both, opacity 1s ease-in 1.2s
                  both`; ]]]
            icon1:
              - position: absolute
              - left: 2.6%
              - bottom: "[[[ return variables.iconbottom; ]]]"
              - width: "[[[ return variables.iconSize; ]]]"
              - height: "[[[ return variables.iconSize; ]]]"
              - overflow: visible
              - animation: >-
                  [[[ return `cardpopintro 0.8s ease-out 0s both, opacity 0.8s ease-in
                  0s both`; ]]]
            icon2:
              - position: absolute
              - left: 17.6%
              - bottom: "[[[ return variables.iconbottom; ]]]"
              - width: "[[[ return variables.iconSize; ]]]"
              - height: "[[[ return variables.iconSize; ]]]"
              - overflow: visible
              - animation: >-
                  [[[ return `cardpopintro 0.8s ease-out 0.17s both, opacity 0.8s
                  ease-in 0.17s both`; ]]]
            icon3:
              - position: absolute
              - left: 32.6%
              - bottom: "[[[ return variables.iconbottom; ]]]"
              - width: "[[[ return variables.iconSize; ]]]"
              - height: "[[[ return variables.iconSize; ]]]"
              - overflow: visible
              - animation: >-
                  [[[ return `cardpopintro 0.8s ease-out 0.33s both, opacity 0.8s
                  ease-in 0.33s both`; ]]]
            icon4:
              - position: absolute
              - left: 47.6%
              - bottom: "[[[ return variables.iconbottom; ]]]"
              - width: "[[[ return variables.iconSize; ]]]"
              - height: "[[[ return variables.iconSize; ]]]"
              - overflow: visible
              - animation: >-
                  [[[ return `cardpopintro 0.8s ease-out 0.5s both, opacity 0.8s ease-in
                  0.5s both`; ]]]
            icon5:
              - position: absolute
              - left: 62.6%
              - bottom: "[[[ return variables.iconbottom; ]]]"
              - width: "[[[ return variables.iconSize; ]]]"
              - height: "[[[ return variables.iconSize; ]]]"
              - overflow: visible
              - animation: >-
                  [[[ return `cardpopintro 0.8s ease-out 0.67s both, opacity 0.8s
                  ease-in 0.67s both`; ]]]
            icon6:
              - position: absolute
              - left: 77.6%
              - bottom: "[[[ return variables.iconbottom; ]]]"
              - width: "[[[ return variables.iconSize; ]]]"
              - height: "[[[ return variables.iconSize; ]]]"
              - overflow: visible
              - animation: >-
                  [[[ return `cardpopintro 0.8s ease-out 0.83s both, opacity 0.8s
                  ease-in 0.83s both`; ]]]
            icon7:
              - position: absolute
              - left: 92.6%
              - bottom: "[[[ return variables.iconbottom; ]]]"
              - width: "[[[ return variables.iconSize; ]]]"
              - height: "[[[ return variables.iconSize; ]]]"
              - overflow: visible
              - animation: >-
                  [[[ return `cardpopintro 0.8s ease-out 1.0s both, opacity 0.8s ease-in
                  1.0s both`; ]]]
        custom_fields:
          bar1: |
            [[[ 
              // Helper function to render precipitation bars
              window.renderBar = (day) => {
                const val = parseFloat(states[`sensor.pirateweather_precip_accumulation_${day}d`]?.state) || 0;
                const height = val < 0.1 ? 0 : Math.min(Math.max(val * 150, 0), 100);
                return height > 0 
                  ? `<div style="position:absolute; bottom:0; left:0; right:0; height:${height}%; background: ${variables.barcolor};"></div>` 
                  : '';
              };
              return window.renderBar(1);
            ]]]
          bar2: |
            [[[ return window.renderBar(2); ]]]
          bar3: |
            [[[ return window.renderBar(3); ]]]
          bar4: |
            [[[ return window.renderBar(4); ]]]
          bar5: |
            [[[ return window.renderBar(5); ]]]
          bar6: |
            [[[ return window.renderBar(6); ]]]
          bar7: |
            [[[ return window.renderBar(7); ]]]
          temp1: |
            [[[ 
              // Helper function to render temperature and day
              window.renderTemp = (dayOffset) => {
                const days = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];
                const date = new Date();
                date.setDate(date.getDate() + 1 + dayOffset);
                const dayName = days[date.getDay()];
                const temp = states[`sensor.pirateweather_daytime_high_temperature_${dayOffset+1}d`]?.state || '-';
                
                return `<div style="text-align:center; letter-spacing: ${variables.textLetterSpacing}; line-height: ${variables.textLineHeight};">
                          <span style="color: ${variables.tempNumberColor}; font-size: ${variables.tempNumberFontSize}; font-weight: ${variables.tempNumberFontWeight};">${temp}</span><span style="color: ${variables.degColor}; font-size: ${variables.tempFontSize}; font-weight: ${variables.restFontWeight};">°C</span><br><span style="font-size: ${variables.dayFontSize}; color: ${variables.dayColor}; font-weight: ${variables.restFontWeight};">${dayName}</span>
                        </div>`;
              };
              return window.renderTemp(0);
            ]]]
          temp2: |
            [[[ return window.renderTemp(1); ]]]
          temp3: |
            [[[ return window.renderTemp(2); ]]]
          temp4: |
            [[[ return window.renderTemp(3); ]]]
          temp5: |
            [[[ return window.renderTemp(4); ]]]
          temp6: |
            [[[ return window.renderTemp(5); ]]]
          temp7: |
            [[[ return window.renderTemp(6); ]]]
          icon1: |
            [[[
              // Helper function to render weather icons
              window.renderIcon = (day) => {
                try {
                  const iconMap = {
                    'clear-day': variables.iconClearDay,
                    'clear-night': variables.iconClearNight,
                    'partly-cloudy-day': variables.iconPartlyCloudyDay,
                    'partly-cloudy-night': variables.iconPartlyCloudyNight,
                    'cloudy': variables.iconCloudy,
                    'fog': variables.iconFog, 
                    'hail': variables.iconHail,
                    'lightning': variables.iconLightning,
                    'lightning-rainy': variables.iconLightningRainy,
                    'pouring': variables.iconPouring,
                    'rain': variables.iconRain,
                    'snow': variables.iconSnow,
                    'snowy': variables.iconSnow,
                    'snowy-rainy': variables.iconSnowyRainy,
                    'sleet': variables.iconSleet,
                    'windy': variables.iconWindy,
                    'windy-variant': variables.iconWindyVariant,
                    'exceptional': variables.iconExceptional
                  };
                  
                  const state = states[`sensor.pirateweather_icon_${day}d`]?.state || 'exceptional';
                  const fileName = iconMap[state] || variables.iconExceptional;
                  const url = `${variables.baseIconUrl}${fileName}.svg`;
                  
                  const xhr = new XMLHttpRequest();
                  xhr.open('GET', url, false);
                  xhr.send(null);
                  
                  if (xhr.status === 200) {
                    let rawSVG = xhr.responseText;
                    rawSVG = rawSVG.replace(/(width|height)="[^"]*"/g, '');
                    rawSVG = rawSVG.replace('<svg ', `<svg style="width:100%; height:100%;" `);
                    return `<div style="width:${variables.iconSize}; height:${variables.iconSize};">${rawSVG}</div>`;
                  } else {
                    return `<div>Error loading icon (${xhr.status})</div>`;
                  }
                } catch (err) {
                  console.error('Error loading weather icon:', err);
                  return `<div>Error loading icon</div>`;
                }
              };
              
              return window.renderIcon(1);
            ]]]
          icon2: |
            [[[ return window.renderIcon(2); ]]]
          icon3: |
            [[[ return window.renderIcon(3); ]]]
          icon4: |
            [[[ return window.renderIcon(4); ]]]
          icon5: |
            [[[ return window.renderIcon(5); ]]]
          icon6: |
            [[[ return window.renderIcon(6); ]]]
          icon7: |
            [[[ return window.renderIcon(7); ]]]
        extra_styles: |
          @keyframes slide-in-blurred-bottom {
              0% {
                  transform: translateY(1000px) scaleY(2.2) scaleX(0.6) rotateX(45deg);
                  transform-origin: 90% 100%;
                  filter: blur(30px);
                  opacity: 0;
              }
              75% {
                  transform: translateY(-30px) scaleY(0.98) scaleX(1.05) rotateX(0deg);
                  filter: blur(8px);
                  opacity: 1;
              }
              85% {
                  transform: translateY(5px) scaleY(1.04) scaleX(0.98);
                  filter: blur(2px);
              }
              95% {
                  transform: translateY(-5px) scaleY(1);
                  filter: blur(0);
              }
              100% {
                  transform: translateY(0);
              }
          }
          @keyframes slide-in {
            0% {transform: translateX(-40%);}
            100% {transform: translateX(0%);}
          }
          @keyframes opacity { 
            0%   {opacity: 0;}
            100% {opacity: 1;}
          }
          @keyframes cardpopintro {
            0%   { transform: scale(0); }
            50%  { transform: scale(1.9); }
            100% { transform: scale(1); }
          }



# ➔ Sunrise and sunset card
      - type: custom:horizon-card
        moon: true
        refresh_period: 60
        fields:
          sunrise: true
          sunset: true
          dawn: false
          noon: false
          dusk: false
          azimuth: false
          sun_azimuth: false
          moon_azimuth: false
          elevation: false
          sun_elevation: false
          moon_elevation: false
          moonrise: false
          moonset: false
          moon_phase: false
        time_format: language
        number_format: language
        no_card: true




# ➔ Moon info card
      - type: custom:lunar-phase-card
        entity: ""
        12hr_format: true
        calendar_modal: true
        compact_view: false
        default_card: base
        hide_buttons: false
        mile_unit: false
        number_decimals: 0
        selected_language: en
        show_background: false
        southern_hemisphere: false
        use_custom: false
        use_default: true
        use_entity: false
        graph_config:
          graph_type: dynamic
          y_ticks: false
          x_ticks: false
          show_time: true
          show_current: true
          show_highest: true
          y_ticks_position: left
          y_ticks_step_size: 30
          time_step_size: 30
        font_customize:
          header_font_size: small
          header_font_style: capitalize
          header_font_color: var(--primary-text-color)
          label_font_size: small
          label_font_style: capitalize
          label_font_color: var(--primary-text-color)
          hide_label: true
        latitude: 51.329131
        longitude: -0.118574
        location:
          city: London
          country: United Kingdom
        moon_position: left
        card_mod:
          style: |
            ha-card {
              background: none !important;
              box-shadow: none !important;
              border: none !important;
            }


# | END: weather.yaml
