# | START: shopping.yaml
# |  PATH: /config/ui/views/shopping.yaml

title: Shopping
path: shopping
subview: true

type: sections
max_columns: 1
sections:
  - type: grid
    cards:
      - type: custom:button-card
        icon: fapro:solar_sidebar_minimalistic
        styles:
          card:
            - background: >-
                var(--ha-card-background, var(--card-background-color,
                white))
            - height: 50px
            - width: 50px
            - border-radius: 50px
            - box-shadow: none
            - border: none
            - transform: translateY(3px)
            - margin-left: 2px
            - margin-bottom: 10px
            - animation: cardpopintro 1.1s 0.8s both
          icon:
            - width: 20px
            - color: var(--primary-text-color)
            - animation: cardpopintro 0.8s 1.2s both
        extra_styles: |
          @keyframes cardpopintro {
            0%   { transform: scale(0);    }
            50%  { transform: scale(1.2);  }
            100% { transform: scale(1);    }
          }
        tap_action:
          action: custom
          custom_code: >
            [[[ this.dispatchEvent(new Event('hass-toggle-menu', {
            bubbles: true, composed: true })); ]]]

      - type: custom:button-card
        icon: fapro:solar_reply
        styles:
          card:
            - background: >-
                var(--ha-card-background, var(--card-background-color,
                white))
            - height: 50px
            - width: 50px
            - border-radius: 50px
            - box-shadow: none
            - border: none
            - transform: translateY(3px)
            - margin-left: 2px
            - margin-bottom: 10px
            - animation: cardpopintro 1.1s 0.9s both
          icon:
            - width: 20px
            - color: var(--primary-text-color)
            - animation: cardpopintro 0.8s 1.4s both
        extra_styles: |
          @keyframes cardpopintro {
            0%   { transform: scale(0);    }
            50%  { transform: scale(1.2);  }
            100% { transform: scale(1);    }
          }
        tap_action:
          action: navigate
          navigation_path: /dashboard-home/home

      - type: custom:bubble-card
        card_type: button
        card_layout: large
        button_type: name
        show_icon: false
        show_name: false
        sub_button:
          - name: List dropdown
            icon: fapro:solar_list_down_minimalistic
            show_background: false
            tap_action:
              action: navigate
              navigation_path: '#security'
            entity: input_select.shopping_store
            show_arrow: false
            show_icon: true
            show_name: false
            show_state: true
        styles: |
          .bubble-button-card-container {
            display: flex;
            align-items: center;
            background: none;
            width: 100% !important;
            overflow: visible !important; /* Allow buttons to extend beyond container */
          }
          .bubble-sub-button {
            height: 50px !important;
            width: 50px !important;
            background: var(--ha-card-background, var(--card-background-color, white)) !important;
            overflow: visible !important; /* Ensure the button itself doesn't get clipped */
            animation: cardpopintro 1.1s 1.1s both !important;
          }
          .bubble-sub-button:last-child {
            width: 120px !important;
            margin-right: -8px !important; /* Push slightly left to remove gap */
            overflow: visible !important;
            --bubble-select-list-width: 122px;
            --bubble-select-list-background-color: var(--divider-color);
            z-index: 1;
          }
          .bubble-sub-button:last-child .bubble-sub-button-icon {
            padding-right: 5px !important;
          }
          .bubble-sub-button-icon {
            --mdc-icon-size: 20px !important;
            color: var(--primary-text-color) !important;
            animation: cardpopintro 0.8s 1.5s both !important;
          }
          .bubble-name-container {
            margin-right: 0px !important;
          }
          mwc-list-item[selected] {       
            color: var(--contrast1) !important;   /* sets font color of selected option in dropdown */
          }

          @keyframes cardpopintro {
            0%   { transform: scale(0); }
            50%  { transform: scale(1.2); }
            100% { transform: scale(1); }
          }

      - type: custom:button-card
        icon: fapro:duotone_scanner_touchscreen
        styles:
          card:
            - background: >-
                var(--ha-card-background, var(--card-background-color,
                white))
            - height: 50px
            - width: 50px
            - border-radius: 50px
            - box-shadow: none
            - border: none
            - transform: translateY(3px)
            - margin-left: 2px
            - margin-bottom: 10px
            - animation: cardpopintro 1.1s 0.8s both
          icon:
            - width: 20px
            - color: var(--primary-text-color)
            - animation: cardpopintro 0.8s 1.2s both
        extra_styles: |
          @keyframes cardpopintro {
            0%   { transform: scale(0);    }
            50%  { transform: scale(1.2);  }
            100% { transform: scale(1);    }
          }
        tap_action:
          action: navigate
          navigation_path: '#tescoclubcard'
          haptic: success

      - type: custom:vertical-stack-in-card
        cards:
          - type: custom:button-card
            custom_fields:
              chart:
                card:
                  type: custom:apexcharts-card
                  chart_type: radialBar
                  header:
                    show: false
                  apex_config:
                    chart:
                      height: 250
                      background: transparent
                    plotOptions:
                      radialBar:
                        startAngle: -135
                        endAngle: 225
                        hollow:
                          margin: 0
                          size: 74%
                          background: var(--contrast3)
                          position: front
                          dropShadow:
                            enabled: false
                        dataLabels:
                          show: false
                        track:
                          background: transparent
                          strokeWidth: 100%
                          margin: 0
                          dropShadow:
                            enabled: true
                            top: 2
                            left: 0
                            blur: 1
                            opacity: 0
                            color: transparent
                    fill:
                      type: gradient
                      gradient:
                        shadeIntensity: 1
                        type: horizontal
                        opacityFrom: 1
                        opacityTo: 1
                        colorStops:
                          - offset: 0
                            color: var(--orange)
                            opacity: 1
                          - offset: 70
                            color: var(--purple)
                            opacity: 1
                    stroke:
                      lineCap: round
                    legend:
                      show: false
                  series:
                    - entity: sensor.popular_times_tesco_purley
              center_text: |
                [[[ return states['sensor.tesco_purley_status'].state ]]]
              bottom_text: >
                [[[ return states['sensor.popular_times_tesco_purley'].state
                + '% full' ]]]
            styles:
              card:
                - background: transparent
                - box-shadow: none
                - max-height: 200px
              grid:
                - grid-template-areas: '"chart" "center_text" "bottom_text"'
                - grid-template-rows: auto 1fr auto
                - place-items: center
              custom_fields:
                chart:
                  - position: relative
                  - width: 100%
                  - height: 100%
                center_text:
                  - position: absolute
                  - z-index: 1
                  - top: 45%
                  - left: 50%
                  - transform: translate(-50%, -50%)
                  - font-size: 1.8rem
                  - font-weight: 300
                  - letter-spacing: 0.8px
                  - color: var(--primary-text-color)
                bottom_text:
                  - position: absolute
                  - top: 53.5%
                  - left: 50%
                  - transform: translate(-50%, 0)
                  - z-index: 1
                  - font-size: 0.75em
                  - color: var(--primary-text-color)
                  - opacity: 0.5
                  - font-weight: 300
                  - letter-spacing: 0.7px
            card_mod:
              style: |
                @keyframes rotateintro {
                  0% {
                    opacity: 0;
                    filter: blur(3px);
                    transform: scale(0.8) rotate(-90deg);
                  }
                  100% {
                    opacity: 1;
                    transform: scale(1) rotate(0deg);
                  }
                }
                ha-card {
                  animation: rotateintro 0.9s cubic-bezier(0.35, 1.7, 0.45, 0.9) 0.9s forwards;
                  opacity: 0;
                }

          - type: custom:button-card
            styles:
              grid:
                - grid-template-areas: '"animated_name animated_name"'
                - grid-template-columns: 1fr
                - width: 100%
              card:
                - height: 50px
                - background: transparent
                - border-radius: var(--ha-card-border-radius, 12px)
                - box-shadow: var(--ha-card-box-shadow, none)
              custom_fields:
                animated_name:
                  - background: transparent
                  - display: flex
                  - flex-direction: row
                  - justify-content: space-between
                  - align-items: center
                  - font-size: 0.95rem
                  - width: 80%
                  - padding-left: 15%
            card_mod:
              style: |
                @keyframes textfadeintro {
                  0% {
                    opacity: 0;
                    transform: translateX(6px);
                    filter: blur(3px);
                  }
                  100% {
                    opacity: 1;
                    transform: translateX(0);
                    filter: blur(0);
                  }
                }
                .animated-text {
                  display: flex;
                  align-items: center;
                  gap: 8px;
                  min-width: 160px;
                }
                .text-wrapper {
                  opacity: 0;
                  animation: textfadeintro 1s 1s ease-out forwards;
                  white-space: nowrap;
                }
                .icon {
                  display: inline-flex;
                  align-items: center;
                  justify-content: center;
                  width: 20px;
                  height: 20px;
                  opacity: 0;
                  animation: textfadeintro 0.8s 2s ease-out forwards;
                }
            custom_fields:
              animated_name: |
                [[[ 
                  const trend = states['sensor.tesco_purley_trend'].state || 'Unknown';
                  const busyness = states['sensor.tesco_purley_relative_busyness'].state || 'Busyness unavailable';

                  const getTrendIcon = (value) => {
                    switch(value) {
                      case 'Busy period ahead':
                        return '<ha-icon class="trend-icon" icon="mdi:alert" style="color: var(--red);"></ha-icon>';
                      case 'Getting busier':
                        return '<ha-icon class="trend-icon" icon="mdi:trending-up" style="color: var(--pink);"></ha-icon>';
                      case 'Getting slightly busier':
                        return '<ha-icon class="trend-icon" icon="mdi:trending-up" style="color: var(--pink); opacity: 0.7;"></ha-icon>';
                      case 'Getting quiet':
                      case 'Getting quieter':
                        return '<ha-icon class="trend-icon" icon="mdi:trending-down" style="color: var(--blue);"></ha-icon>';
                      case 'Getting slightly quieter':
                        return '<ha-icon class="trend-icon" icon="mdi:trending-down" style="color: var(--blue); opacity: 0.7;"></ha-icon>';
                      default:
                        return '<ha-icon icon="fapro:duotone_store_lock"></ha-icon>';
                    }
                  };

                  const getBusynessIcon = (value) => {
                    switch(value) {
                      case 'Much busier than usual':
                        return '<ha-icon class="busyness-icon" icon="mdi:emoticon-sad" style="color: var(--red);"></ha-icon>';
                      case 'Busier than usual':
                        return '<ha-icon class="busyness-icon" icon="mdi:emoticon-sad-outline" style="color: var(--pink);"></ha-icon>';
                      case 'About normal':
                        return '<ha-icon class="busyness-icon" icon="mdi:emoticon-neutral" style="color: var(--yellow);"></ha-icon>';
                      case 'Quieter than usual':
                        return '<ha-icon class="busyness-icon" icon="mdi:emoticon" style="color: var(--green); opacity: 0.7;"></ha-icon>';
                      case 'Much quieter than usual':
                        return '<ha-icon class="busyness-icon" icon="mdi:emoticon" style="color: var(--green);"></ha-icon>';
                      case 'Closed':
                        return '<ha-icon class="busyness-icon" icon="mdi:sleep" style="color: var(--disabled-text-color);"></ha-icon>';
                      case 'Unknown':
                        return '<ha-icon icon="mdi:help-circle-outline"></ha-icon>';
                      default:
                        return '<ha-icon icon="mdi:help-circle-outline"></ha-icon>';
                    }
                  };
                  
                  return `
                    <div class="animated-text">
                      <div class="icon" style="animation-delay: 0.4s;">${getTrendIcon(trend)}</div>
                      <div class="text-wrapper" style="animation-delay: 0.5s;">${trend}</div>
                    </div>
                    <div class="animated-text">
                      <div class="icon" style="animation-delay: 0s;">${getBusynessIcon(busyness)}</div>
                      <div class="text-wrapper" style="animation-delay: 0.1s;">${busyness}</div>
                    </div>
                  `;
                ]]]
        card_mod:
          style: |
            ha-card {
              animation: cardpopintro 0.8s  0.4s both;
              pointer-events: none;
              height: 220px !imoortant;
              min-height: 220px !important;
              border-radius:var(--ha-card-border-radius, 12px) var(--ha-card-border-radius, 12px)  0px 0px ;
            }

            @keyframes cardpopintro {
              0% { transform: scale(0); }
              60% { transform: scale(1.05); }
              85% { transform: scale(0.98); }
              100% { transform: scale(1); }
            }

      - type: custom:button-card
        entity: input_boolean.curtain_quietdrift_mode
        show_icon: false
        show_name: false
        extra_styles: |
          @keyframes mainCard {
            0%   { transform: scale(0); }
          } 

          @keyframes list_intro {
              from {
                  transform: perspective(200px) translate3d(0, 0, -80px) rotateX(-10deg);
                  opacity: 0; 
                  filter: blur(3px);
              }
              to {
                  transform: perspective(1000px);
                  opacity: 1;
                  filter: none;
              }
          }  
          @keyframes slide {
            0% {transform: translateX(-4%); opacity: 0;}
            100% {transform: translateX(0%); opacity: 1;}
          }  
        styles:
          card:
            - border: none
            - border-radius: >-
                0px 0px var(--ha-card-border-radius, 12px)
                var(--ha-card-border-radius, 12px)
            - height: calc(100vh - 450px)
            - overflow: hidden
            - display: flex
            - flex-direction: column
            - animation: mainCard 0.8s both
          custom_fields:
            shopping_list:
              - animation: list_intro 1.4s 0.4s ease both
              - mask-image: >-
                  linear-gradient(to top, transparent 1%,
                  var(--ha-card-background) 5%, var(--ha-card-background)
                  95%, transparent 99%)
              - position: absolute
              - top: 100px
              - bottom: 14px
              - left: 4px
              - right: 4px
              - overflow-y: auto
              - scrollbar-width: thin
              - '-ms-overflow-style': auto
              - '-webkit-overflow-scrolling': touch
              - display: flex
              - flex-direction: column
              - justify-content: flex-start
              - background: transparent
              - border: none
              - box-shadow: none
              - padding-right: 20px
              - scrollbar-width: none
              - '-ms-overflow-style': none
            add_item_textbox:
              - position: absolute
              - top: 4px
              - width: 60%
              - left: 13px
              - animation: slide 1.6s 0.8s both
        custom_fields:
          add_item_textbox:
            card:
              type: entities
              entities:
                - entity: input_text.shopping_list
                  name: Add item
                  card_mod:
                    style:
                      .: |
                        ha-card {
                          box-shadow: none !important;
                          text-rendering: optimizeLegibility !important;
                        }
                      ha-textfield $: |
                        .mdc-text-field {
                          height: 40px !important;
                          border-radius: 20px !important;
                          --mdc-text-field-fill-color: transparent;
                          --mdc-text-field-idle-border-color: var(--contrast3,rgba(100,100,100,0.3));
                          --mdc-text-field-hover-border-color: var(--contrast3);
                          border: 2.5px solid var(--mdc-text-field-idle-border-color) !important;
                          width: calc(100% - 0px) !important;
                          transition: border-color 0.4s ease !important;
                          margin-top: 12px !important;
                          margin-bottom: 6px !important;
                          background: var(--contrast3) !important;
                        }
                        .mdc-text-field__input {
                          align-self: center;
                          color: var(--primary-text-color) !important;
                          font-family: SF Pro Text, Roboto, system-ui;
                          letter-spacing: 0.4px !important;            
                          font-weight: 300 !important;
                          font-size: 1rem !important;
                          padding-left: 10px !important;
                          padding-right: 10px !important;
                        }
                        .mdc-text-field--focused {
                          --mdc-text-field-idle-border-color: var(--accent-color, rgba(0, 255, 0, 0.9)) !important;
                          --mdc-text-field-hover-border-color: var(--accent-color, rgba(0, 255, 0, 0.9)) !important;
                        }
                        .mdc-line-ripple::after,
                        .mdc-line-ripple::before {
                          border-bottom-style: none !important;
                        }
                        .mdc-text-field__ripple {
                          display: none !important;
                        }
                        .mdc-floating-label {
                          font-family: SF Pro Text, Roboto, system-ui;
                          letter-spacing: 0.4px !important;
                          line-height: 54px !important;  
                          width: auto !important;
                          padding-left: 10px !important;
                          padding-right: 10px !important;            
                          overflow: visible !important;
                          height: 54px !important;
                          color: var(--primary-text-color) !important;
                          background: none !important;
                          font-size: 1rem !important;
                          font-weight: 300 !important;
                          border-radius: 50px !important;
                          transition: 0.4s ease-in-out !important;
                          text-rendering: optimizeLegibility !important;
                        }
                        .mdc-text-field--focused .mdc-floating-label {
                          color: var(--accent-color, rgba(0, 255, 0, 0.9)) !important;
                        }
                        .mdc-text-field__input::placeholder {
                          color: transparent !important;
                        }
                      hui-generic-entity-row $: |
                        state-badge {
                          display: none;
                        }
              card_mod:
                style: |
                  ha-card {
                    height: 70px !important;
                    background: none !important;
                    box-shadow: none !important;
                    border: none !important;
                  }
          shopping_list:
            card:
              type: todo-list
              entity: |
                [[[ 
                  // Get the toggle state
                  const toggle = states['input_boolean.shopping_list_type_toggle'];
                  const currentList = toggle && toggle.state === 'on' ? 'todo.amazon_list' : 'todo.shop_list';
                  
                  // If we're in a transition, delay the entity change
                  if (window._isTransitioning) {
                    return window._previousEntity || currentList;
                  }
                  
                  // Store the current entity for reference
                  window._previousEntity = currentList;
                  return currentList;
                ]]]  
              triggers_update:
                - input_boolean.shopping_list_type_toggle
                - todo.amazon_list
                - todo.shop_list
              card_mod:
                style:
                  .: |
                    ha-card.type-todo-list {
                      position: relative;
                      overflow-y: auto;
                    }          
                    ha-card.type-todo-list div.header,
                    ha-card.type-todo-list .addRow,
                    ha-card.type-todo-list div.divider {
                      display: none;
                    }          
                    ha-check-list-item.editRow.completed {
                      opacity: 0.2;
                      font-style: oblique !important;
                    }
                    span.summary {
                      color: var(--primary-text-color) !important;
                      font-family: SF Pro Text, Roboto, system-ui;
                      letter-spacing: 0.4px !important;            
                      font-weight: 300 !important;
                      font-size: 1rem !important;
                      text-rendering: optimizeLegibility !important;
                      overflow-wrap: break-word;
                      overflow: hidden;
                      text-overflow: ellipsis;
                      top: 52.5%;
                      left: 7%;
                      text-align: start;
                      padding-left: 0;
                    }
                    p {
                      margin-right: 15% !important;
                      padding-top: 5px;
                      padding-left: 2px;
                      font-size: 0.75rem;
                      width: 100%;
                      color: var(--secondary-text-color) !important;
                      font-weight: 300;
                      letter-spacing: 0.55px;
                      overflow-wrap: normal;
                      overflow: visible;
                      text-overflow: ellipsis;
                      line-height: 15px;
                      text-align: start;
                      opacity: 0.92;
                      text-rendering: optimizeLegibility !important;
                    }
                  ha-icon-button$: |
                    mwc-icon-button {
                      --mdc-icon-button-size: 40px;
                      --mdc-icon-size: 20px;
                      color: var(--blue, rgba(0, 0, 255, 0.9)) !important;
                    }
                  ha-check-list-item$: |
                    mwc-checkbox {
                      right: 0px;
                      top: 20%;
                      transform: translateY(-50%);
                      position: absolute;
                      padding-top: 10%;
                      opacity: 0.8;
                      cursor: inherit;
                      --mdc-theme-secondary: var(--ha-card-background, rgba(255, 255, 255, 0.9));
                    }
        state_display: |
          [[[
            // Add event listener for state changes if not already added
            if (!window._todoListTransition) {
              window._todoListTransition = true;
              window.addEventListener('state-changed', (ev) => {
                if (ev.detail.entity_id === 'input_boolean.shopping_list_type_toggle') {
                  window._isTransitioning = true;
                  
                  // Get the current list
                  const todoList = document.querySelector('.type-todo-list');
                  if (todoList) {
                    // Set up transition
                    todoList.style.transition = 'opacity 0.3s ease-out';
                    todoList.style.opacity = '0';
                    
                    // Wait for fade out to complete
                    setTimeout(() => {
                      // Allow entity to change
                      window._isTransitioning = false;
                      
                      // Force a re-render of the todo-list
                      const todoCard = todoList.closest('hui-todo-list-card');
                      if (todoCard) {
                        todoCard._config = {...todoCard._config};
                        todoCard.requestUpdate();
                      }
                      
                      // Set up the fade in and intro animation
                      requestAnimationFrame(() => {
                        todoList.style.opacity = '1';
                        todoList.style.animation = 'list_intro 1.4s ease both';
                      });
                    }, 300);
                  }
                }
              });
            }
            return '';
          ]]]

      - type: vertical-stack
        cards:
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#tescoclubcard'
            styles: |-
              .bubble-header-container {
                flex-direction: row-reverse; /* Swap close button position */
                
              }
              .bubble-header {
                margin: 0 0 0 14px !important; /* Swap close button position */
                
              }
              .name {
                color: var(--contrast20, var(--primary-text-color, rgba(255, 255, 255, 0.9))) !important;
                font-size: 0.85em !important;
                font-weight: 300 !important;
                letter-spacing: 1.5px !important;
                font-family: Ubuntu, sans-serif;
                padding-left: 10px;
              }
              .bubble-button-card-container {
                background: var(--contrast3, var(--primary-background-color, rgba(255, 255, 255, 0.2))) !important;
              }      
            name: Tesco clubcard
            icon: fapro:solar_power
            show_last_changed: false
            show_attribute: false
            show_name: true
            show_state: false
            trigger_state: 'on'
            trigger_close: false
            show_header: true
            button_type: name
            entity: light.room_02
            scrolling_effect: false
            show_icon: false
            sub_button: []
            use_accent_color: false
            style_templates:
              - get_state_attribute
            close_by_clicking_outside: false
            card_layout: normal
            icon_container_color:
              - 255
              - 128
              - 192
            margin_top_desktop: 60vh
            margin_top_mobile: 25vh

          - type: custom:gap-card
            height: 20

          - type: custom:button-card
            styles:
              card:
                - background: transparent
              grid:
                - grid-template-areas: '"qr_code"'
                - grid-template-rows: auto
                - place-items: center
              custom_fields:
                qr_code:
                  - position: relative
                  - width: 77%
                  - height: 100%
            custom_fields:
              qr_code:
                card:
                  type: picture
                  image: /local/media/image/shopping/tesco_clubcard_qr_code.png
                  tap_action:
                    action: none
                  hold_action:
                    action: none

          - type: custom:button-card
            name: '[ scan code ]'
            styles:
              card:
                - padding: 8px
                - padding-bottom: 24px
                - background: transparent
                - border: none
                - box-shadow: none
              name:
                - font-size: 1.4rem
                - font-weight: 400
                - letter-spacing: 0.4px
                - color: var(--primary-text-color)
                - font-family: >-
                    -apple-system, BlinkMacSystemFont, 'San Francisco',
                    'Helvetica Neue', Helvetica, Arial, sans-serif


# |   END: shopping.yaml